import logging
import requests
from bs4 import BeautifulSoup
from datetime import datetime
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, ContextTypes, MessageHandler, filters

logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

TOKEN = "8388176239:AAH2Ktp55xC0Wj10J4s86GjqLz5CcJDcCcU"

async def parse_to212_schedule():
    """–ü–∞—Ä—Å–∏–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¢–û–õ–¨–ö–û –¥–ª—è –≥—Ä—É–ø–ø—ã –¢–û-212"""
    try:
        url = "https://xn--80a3ae8b.xn--j1al4b.xn--p1ai/student/raspisanie-zanyatiy/"
        
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
        }
        
        response = requests.get(url, headers=headers, timeout=10)
        response.encoding = 'utf-8'
        soup = BeautifulSoup(response.text, 'html.parser')
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏
        days_ru = ["–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–≤—Ç–æ—Ä–Ω–∏–∫", "—Å—Ä–µ–¥–∞", "—á–µ—Ç–≤–µ—Ä–≥", "–ø—è—Ç–Ω–∏—Ü–∞", "—Å—É–±–±–æ—Ç–∞"]
        today_ru = days_ru[datetime.now().weekday()]
        
        # –ò—â–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –¢–û-212
        content = soup.get_text()
        
        schedule_text = f"üìÖ *–¢–û-212 - –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {today_ru.capitalize()}*\n\n"
        
        # –ï—Å–ª–∏ –Ω–∞—à–ª–∏ –≥—Ä—É–ø–ø—É –¢–û-212 - –ø–∞—Ä—Å–∏–º –µ—ë —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
        if '—Ç–æ-212' in content.lower():
            # –í–ê–ñ–ù–û: –ù—É–∂–Ω–æ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥ —Ä–µ–∞–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å–∞–π—Ç–∞!
            # –≠—Ç–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø—Ä–∏–º–µ—Ä - –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥
            
            schedule_text += "*üìç –û—Å–Ω–æ–≤–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ:*\n"
            schedule_text += "1. –†–∞–∑–≥–æ–≤–æ—Ä—ã –æ –≤–∞–∂–Ω–æ–º | 326 | 3 –∫–æ—Ä–ø—É—Å\n"
            schedule_text += "2. –ò—Å—Ç–æ—Ä–∏—è | 323 | 3 –∫–æ—Ä–ø—É—Å\n" 
            schedule_text += "3. –ò–Ω–∂–µ–Ω–µ—Ä. –≥—Ä–∞—Ñ–∏–∫–∞ | 315 | 1 –∫–æ—Ä–ø—É—Å\n"
            schedule_text += "4. –≠–ª–µ–∫—Ç—Ä–æ—Ç–µ—Ö–Ω–∏–∫–∞ | 413 | 1 –∫–æ—Ä–ø—É—Å\n\n"
            
            schedule_text += "*üë• –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏:*\n"
            schedule_text += "‚Ä¢ –ì–æ–º–µ–Ω—é–∫ –î.–î. (–†–∞–∑–≥–æ–≤–æ—Ä—ã –æ –≤–∞–∂–Ω–æ–º)\n"
            schedule_text += "‚Ä¢ –ú–æ—Ä–µ–≤–∞ –ï.–ö. (–ò—Å—Ç–æ—Ä–∏—è)\n"
            schedule_text += "‚Ä¢ –ß–∞–ø–ª–∏–Ω–∞ –°.–ú. (–ò–Ω–∂–µ–Ω–µ—Ä. –≥—Ä–∞—Ñ–∏–∫–∞)\n"
            schedule_text += "‚Ä¢ –†—É–º—è–Ω—Ü–µ–≤–∞ –ú.–ê. (–≠–ª–µ–∫—Ç—Ä–æ—Ç–µ—Ö–Ω–∏–∫–∞)\n\n"
            
        else:
            # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –±–∞–∑–æ–≤–æ–µ
            schedule_text += "‚ö†Ô∏è *–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¢–û-212*\n\n"
            schedule_text += "*–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞ —Å–∞–π—Ç–µ:*\n"
            schedule_text += "‚Ä¢ –ê–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è\n"
            schedule_text += "‚Ä¢ –ù–∞–ª–∏—á–∏–µ –≥—Ä—É–ø–ø—ã –¢–û-212\n"
            schedule_text += "‚Ä¢ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –¥–∞—Ç—ã\n\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∑–≤–æ–Ω–∫–∏
        schedule_text += "üîî *–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤:*\n"
        schedule_text += "1 –ø–∞—Ä–∞: 08:00 - 08:55\n"
        schedule_text += "2 –ø–∞—Ä–∞: 09:00-09:45 / 09:50-10:35\n"
        schedule_text += "3 –ø–∞—Ä–∞: 10:50-11:35 / 11:40-12:25\n"
        schedule_text += "4 –ø–∞—Ä–∞: 12:45-13:30 / 13:35-14:20\n\n"
        
        schedule_text += "üè¢ *–ö–æ—Ä–ø—É—Å–∞:* 1, 2, 3, 5, 6\n\n"
        schedule_text += f"üåê *–ò—Å—Ç–æ—á–Ω–∏–∫:* –º–≥—Ç—É–≥–∞.—Ä—É—Å\n"
        schedule_text += f"üìÖ *–î–∞—Ç–∞:* {datetime.now().strftime('%d.%m.%Y')}\n"
        schedule_text += f"üîÑ *–û–±–Ω–æ–≤–ª–µ–Ω–æ:* {datetime.now().strftime('%H:%M')}"
        
        return schedule_text
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –¢–û-212: {e}")
        return "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¢–û-212"

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        ['üìÖ –¢–û-212 –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ', 'üîî –ó–≤–æ–Ω–∫–∏'],
        ['üîÑ –û–±–Ω–æ–≤–∏—Ç—å', 'üåê –°–∞–π—Ç –¢–û-212']
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    
    await update.message.reply_text(
        f"üëã *–ë–æ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã –¢–û-212*\n\n"
        f"üìÖ –°–µ–≥–æ–¥–Ω—è: {datetime.now().strftime('%d.%m.%Y')}\n"
        f"üè´ –ú–ì–¢–£ –ì–ê\n\n"
        f"–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )

async def show_to212_schedule(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("‚è≥ –ó–∞–≥—Ä—É–∂–∞—é —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¢–û-212...")
    schedule_text = await parse_to212_schedule()
    await update.message.reply_text(schedule_text, parse_mode='Markdown')

async def show_bells(update: Update, context: ContextTypes.DEFAULT_TYPE):
    bells_text = (
        "üîî *–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤ –¢–û-212:*\n\n"
        "1 –ø–∞—Ä–∞: 08:00 - 08:55\n"
        "2 –ø–∞—Ä–∞: 09:00-09:45 / 09:50-10:35\n"
        "3 –ø–∞—Ä–∞: 10:50-11:35 / 11:40-12:25\n"
        "4 –ø–∞—Ä–∞: 12:45-13:30 / 13:35-14:20\n"
        "5 –ø–∞—Ä–∞: 14:30-15:15 / 15:20-16:05\n"
        "6 –ø–∞—Ä–∞: 16:15-17:00 / 17:05-17:50\n\n"
        "üè¢ *–ö–æ—Ä–ø—É—Å–∞:* 1, 2, 3, 5, 6\n\n"
        f"üîÑ *–û–±–Ω–æ–≤–ª–µ–Ω–æ:* {datetime.now().strftime('%d.%m.%Y %H:%M')}"
    )
    await update.message.reply_text(bells_text, parse_mode='Markdown')

async def update_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üîÑ –û–±–Ω–æ–≤–ª—è—é —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¢–û-212...")
    await show_to212_schedule(update, context)

async def website_info(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üåê *–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç –¥–ª—è –¢–û-212:*\n"
        "https://–º–≥—Ç—É–≥–∞.—Ä—É—Å/student/raspisanie-zanyatiy/\n\n"
        "üìç *–ì—Ä—É–ø–ø–∞:* –¢–û-212\n"
        "üè´ *–ö–æ—Ä–ø—É—Å–∞:* 1, 2, 3, 5, 6\n\n"
        "–¢–∞–º –≤—Å–µ–≥–¥–∞ –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ!",
        parse_mode='Markdown'
    )

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text.lower()
    
    if '—Ç–æ-212' in text or '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ' in text or 'üìÖ' in text:
        await show_to212_schedule(update, context)
    elif '–∑–≤–æ–Ω–∫–∏' in text or 'üîî' in text:
        await show_bells(update, context)
    elif '–æ–±–Ω–æ–≤–∏—Ç—å' in text or 'üîÑ' in text:
        await update_command(update, context)
    elif '—Å–∞–π—Ç' in text or 'üåê' in text:
        await website_info(update, context)
    else:
        await update.message.reply_text(
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¢–û-212 üëÜ\n\n"
            "üìç *–ì—Ä—É–ø–ø–∞:* –¢–û-212\n"
            "üè´ *–ö–æ—Ä–ø—É—Å–∞:* 1, 2, 3, 5, 6",
            parse_mode='Markdown'
        )

def main():
    application = Application.builder().token(TOKEN).build()
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –¥–ª—è –≥—Ä—É–ø–ø—ã –¢–û-212!")
    application.run_polling()

if __name__ == '__main__':
    main()
