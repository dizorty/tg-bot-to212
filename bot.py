import logging
from datetime import datetime, timedelta
from telegram import ReplyKeyboardMarkup
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

TOKEN = "8388176239:AAH2Ktp55xC0Wj10J4s86GjqLz5CcJDcCcU"

def get_schedule(day_name):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –¥–Ω—è"""
    schedule_text = f"üìÖ *–¢–û-212 - {day_name.capitalize()}*\n\n"
    
    if '–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫' in day_name:
        schedule_text += "1. –†–∞–∑–≥–æ–≤–æ—Ä—ã –æ –≤–∞–∂–Ω–æ–º | –ì–æ–º–µ–Ω—é–∫ –î.–î. | 326 | 3 –∫–æ—Ä–ø—É—Å\n"
        schedule_text += "2. –ò—Å—Ç–æ—Ä–∏—è | –ú–æ—Ä–µ–≤–∞ –ï.–ö. | 323 | 3 –∫–æ—Ä–ø—É—Å\n"
        schedule_text += "3. –ò–Ω–∂–µ–Ω–µ—Ä. –≥—Ä–∞—Ñ–∏–∫–∞ | –ß–∞–ø–ª–∏–Ω–∞ –°.–ú. | 315 | 1 –∫–æ—Ä–ø—É—Å\n"
        schedule_text += "4. –≠–ª–µ–∫—Ç—Ä–æ—Ç–µ—Ö–Ω–∏–∫–∞ | –†—É–º—è–Ω—Ü–µ–≤–∞ –ú.–ê. | 413 | 1 –∫–æ—Ä–ø—É—Å\n"
    elif '–≤—Ç–æ—Ä–Ω–∏–∫' in day_name:
        schedule_text += "1. –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ | 210 | 1 –∫–æ—Ä–ø—É—Å\n"
        schedule_text += "2. –§–∏–∑–∏–∫–∞ | 315 | 1 –∫–æ—Ä–ø—É—Å\n"
        schedule_text += "3. –§–∏–∑–∫—É–ª—å—Ç—É—Ä–∞ | —Å–ø–æ—Ä—Ç–∑–∞–ª | 2 –∫–æ—Ä–ø—É—Å\n"
    elif '—Å—Ä–µ–¥–∞' in day_name:
        schedule_text += "1. –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ | 401 | 1 –∫–æ—Ä–ø—É—Å\n"
        schedule_text += "2. –ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö | 402 | 1 –∫–æ—Ä–ø—É—Å\n"
    elif '—á–µ—Ç–≤–µ—Ä–≥' in day_name:
        schedule_text += "1. –ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫ | 205 | 2 –∫–æ—Ä–ø—É—Å\n"
        schedule_text += "2. –≠–∫–æ–Ω–æ–º–∏–∫–∞ | 310 | 3 –∫–æ—Ä–ø—É—Å\n"
    elif '–ø—è—Ç–Ω–∏—Ü–∞' in day_name:
        schedule_text += "1. –ë–ñ–î | 115 | 1 –∫–æ—Ä–ø—É—Å\n"
        schedule_text += "2. –≠–∫–æ–ª–æ–≥–∏—è | 116 | 1 –∫–æ—Ä–ø—É—Å\n"
    else:
        schedule_text += "üéâ –í—ã—Ö–æ–¥–Ω–æ–π! –ü–∞—Ä –Ω–µ—Ç\n"
    
    schedule_text += "\nüîî *–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤:*\n"
    schedule_text += "1 –ø–∞—Ä–∞: 08:00 - 08:55\n"
    schedule_text += "2 –ø–∞—Ä–∞: 09:00-09:45 / 09:50-10:35\n"
    schedule_text += "3 –ø–∞—Ä–∞: 10:50-11:35 / 11:40-12:25\n"
    schedule_text += "4 –ø–∞—Ä–∞: 12:45-13:30 / 13:35-14:20\n"
    schedule_text += "5 –ø–∞—Ä–∞: 14:30-15:15 / 15:20-16:05\n"
    schedule_text += "6 –ø–∞—Ä–∞: 16:15-17:00 / 17:05-17:50\n\n"
    
    schedule_text += "üè¢ *–ö–æ—Ä–ø—É—Å–∞:* 1, 2, 3, 5, 6\n"
    schedule_text += f"üîÑ *–û–±–Ω–æ–≤–ª–µ–Ω–æ:* {datetime.now().strftime('%d.%m.%Y %H:%M')}"
    
    return schedule_text

def get_bells_schedule():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤"""
    return (
        "üîî *–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤:*\n\n"
        "1 –ø–∞—Ä–∞: 08:00 - 08:55\n"
        "2 –ø–∞—Ä–∞: 09:00-09:45 / 09:50-10:35\n"
        "3 –ø–∞—Ä–∞: 10:50-11:35 / 11:40-12:25\n"
        "4 –ø–∞—Ä–∞: 12:45-13:30 / 13:35-14:20\n"
        "5 –ø–∞—Ä–∞: 14:30-15:15 / 15:20-16:05\n"
        "6 –ø–∞—Ä–∞: 16:15-17:00 / 17:05-17:50\n\n"
        "üè¢ *–ö–æ—Ä–ø—É—Å–∞:* 1, 2, 3, 5, 6\n\n"
        f"üîÑ *–û–±–Ω–æ–≤–ª–µ–Ω–æ:* {datetime.now().strftime('%d.%m.%Y %H:%M')}"
    )

def start(update, context):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    keyboard = [
        ['üìÖ –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', 'üìÖ –í—Ç–æ—Ä–Ω–∏–∫', 'üìÖ –°—Ä–µ–¥–∞'],
        ['üìÖ –ß–µ—Ç–≤–µ—Ä–≥', 'üìÖ –ü—è—Ç–Ω–∏—Ü–∞', 'üìÖ –°—É–±–±–æ—Ç–∞'],
        ['üîî –ó–≤–æ–Ω–∫–∏', 'üåê –°–∞–π—Ç']
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    
    update.message.reply_text(
        "üëã *–ë–æ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¢–û-212*\n\n"
        "üìÖ –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏:\n"
        "‚Ä¢ –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ - –ü—è—Ç–Ω–∏—Ü–∞: –ø–∞—Ä—ã\n"
        "‚Ä¢ –°—É–±–±–æ—Ç–∞: –≤—ã—Ö–æ–¥–Ω–æ–π\n\n"
        "üè´ *–ö–æ—Ä–ø—É—Å–∞:* 1, 2, 3, 5, 6\n"
        "üåê *–ò—Å—Ç–æ—á–Ω–∏–∫:* –º–≥—Ç—É–≥–∞.—Ä—É—Å",
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )

def handle_message(update, context):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    text = update.message.text.lower()
    
    if '–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫' in text:
        schedule = get_schedule('–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫')
        update.message.reply_text(schedule, parse_mode='Markdown')
    elif '–≤—Ç–æ—Ä–Ω–∏–∫' in text:
        schedule = get_schedule('–≤—Ç–æ—Ä–Ω–∏–∫')
        update.message.reply_text(schedule, parse_mode='Markdown')
    elif '—Å—Ä–µ–¥–∞' in text:
        schedule = get_schedule('—Å—Ä–µ–¥–∞')
        update.message.reply_text(schedule, parse_mode='Markdown')
    elif '—á–µ—Ç–≤–µ—Ä–≥' in text:
        schedule = get_schedule('—á–µ—Ç–≤–µ—Ä–≥')
        update.message.reply_text(schedule, parse_mode='Markdown')
    elif '–ø—è—Ç–Ω–∏—Ü–∞' in text:
        schedule = get_schedule('–ø—è—Ç–Ω–∏—Ü–∞')
        update.message.reply_text(schedule, parse_mode='Markdown')
    elif '—Å—É–±–±–æ—Ç–∞' in text:
        schedule = get_schedule('—Å—É–±–±–æ—Ç–∞')
        update.message.reply_text(schedule, parse_mode='Markdown')
    elif '–∑–≤–æ–Ω–∫–∏' in text:
        bells = get_bells_schedule()
        update.message.reply_text(bells, parse_mode='Markdown')
    elif '—Å–∞–π—Ç' in text:
        update.message.reply_text(
            "üåê *–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç:*\n"
            "https://–º–≥—Ç—É–≥–∞.—Ä—É—Å/student/raspisanie-zanyatiy/\n\n"
            "üìÖ *–ï—Å—Ç—å –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ –¥–Ω–µ–π*\n"
            "üìç *–ì—Ä—É–ø–ø–∞:* –¢–û-212\n"
            "üè´ *–ö–æ—Ä–ø—É—Å–∞:* 1, 2, 3, 5, 6",
            parse_mode='Markdown'
        )
    else:
        update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –∏–∑ –º–µ–Ω—é üëÜ")

def error(update, context):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
    logger.warning('Update "%s" caused error "%s"', update, context.error)

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    
    # –°–æ–∑–¥–∞–µ–º Updater –∏ –ø–µ—Ä–µ–¥–∞–µ–º –µ–º—É —Ç–æ–∫–µ–Ω
    updater = Updater(TOKEN, use_context=True)
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∏—Å–ø–µ—Ç—á–µ—Ä –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    dp = updater.dispatcher
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(MessageHandler(Filters.text, handle_message))
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    dp.add_error_handler(error)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    updater.start_polling()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç –µ–≥–æ
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    updater.idle()

if __name__ == '__main__':
    main()
